trigger:
- main

parameters:
- name: appVersion
  displayName: 'Application Version'
  type: string
  default: 'test2.0.2'

variables:
  dockerRepo: "cedrichj/devops_cicd"
  KUBECONFIG: '/var/lib/jenkins/.kube/kubeconfig'

jobs:
- job: DeployAndTestsApp
  pool:
    name: jenkins

  steps:
  - task: Docker@2
    inputs:
      command: 'login'
      containerRegistry: 'DockerHubConnection'
    displayName: 'Login to Docker Registry'

  - script: |
      echo '<--------------- Checking Docker Image --------------->'
      echo "${{ variables.dockerRepo }}:v${{ parameters.appVersion }}"
      if ! docker image inspect ${{ variables.dockerRepo }}:v${{ parameters.appVersion }} >/dev/null 2>&1; then
          echo "Docker image ${{ variables.dockerRepo }}:v${{ parameters.appVersion }} does not exist."
          exit 1
      fi
    displayName: 'Check Docker Image'
  
  - script: |
      echo '<--------------- Start of Helm Upgrade/Install --------------->'
      sudo sed -i "s|image: ${{ variables.dockerRepo }}:.*|image: ${{ variables.dockerRepo }}:v${{ parameters.appVersion }}|" /var/lib/jenkins/helm/Ced_Devops_Webapp-test/templates/deployment.yaml 
      sudo sed -i "s/^appVersion: .*/appVersion: \"$appVersion\"/" /var/lib/jenkins/helm/Ced_Devops_Webapp-test/Chart.yaml
      sudo sed -i "s/^version: .*/version: $appVersion/" /var/lib/jenkins/helm/Ced_Devops_Webapp-test/Chart.yaml                   
      helm upgrade --install ced-devops-webapp-test /var/lib/jenkins/helm/Ced_Devops_Webapp-test \
      --namespace ced-devops-cicd-test \
      --kubeconfig=${{ variables.KUBECONFIG }} \
      --wait
      echo '<--------------- End of Helm Deploy --------------->'
    displayName: 'Deploy App'

  - script: |
      # Install dependencies for tests
      pip install --user pytest pytest-playwright pytest-html
      playwright install
      export PATH=$PATH:/var/lib/jenkins/.local/bin/
      echo "hello"
    displayName: Install dependencies
  
  - script: |
      # Run Playwright Python tests in /AzureRepo
      sudo chown -R jenkins:jenkins /var/lib/jenkins/myagent/_work/5/s/Test/Playwright
      pytest -s /var/lib/jenkins/myagent/_work/5/s/Test/Playwright/tests.py --html=/var/lib/jenkins/myagent/_work/5/s/Test/Playwright/reportPY.html
    displayName: Run Playwright Python tests
  
  - script: |
      # Run Playwright JS tests in /AzureRepo
      cd /var/lib/jenkins/myagent/_work/5/s/Test/Playwright
      source ~/.bashrc
      npx playwright test --reporter=html
    displayName: Run Playwright .JS tests
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: /var/lib/jenkins/myagent/_work/5/s/Test/Playwright/reportPY.html
      ArtifactName: PythonTestReports
      publishLocation: Container
    displayName: Publish Python Test Report
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: /var/lib/jenkins/myagent/_work/5/s/playwright-report/index.html
      ArtifactName: JavaScriptTestReports
      publishLocation: Container
    displayName: Publish JavaScript Test Report
